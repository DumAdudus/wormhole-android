// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.59.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member

import "bridge_definitions.dart";
import 'dart:convert';
import 'dart:async';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'bridge_generated.io.dart'
    if (dart.library.html) 'bridge_generated.web.dart';

import 'package:meta/meta.dart';

class NativeImpl implements Native {
  final NativePlatform _platform;
  factory NativeImpl(ExternalLibrary dylib) =>
      NativeImpl.raw(NativePlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory NativeImpl.wasm(FutureOr<WasmModule> module) =>
      NativeImpl(module as ExternalLibrary);
  NativeImpl.raw(this._platform);
  Stream<String> test({dynamic hint}) {
    return _platform.executeStream(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_test(port_),
      parseSuccessData: _wire2api_String,
      constMeta: kTestConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kTestConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "test",
        argNames: [],
      );

  Stream<TUpdate> sendFile(
      {required String fileName, required String filePath, dynamic hint}) {
    var arg0 = _platform.api2wire_String(fileName);
    var arg1 = _platform.api2wire_String(filePath);
    return _platform.executeStream(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_send_file(port_, arg0, arg1),
      parseSuccessData: _wire2api_t_update,
      constMeta: kSendFileConstMeta,
      argValues: [fileName, filePath],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSendFileConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "send_file",
        argNames: ["fileName", "filePath"],
      );

  void dispose() {
    _platform.dispose();
  }
// Section: wire2api

  String _wire2api_String(dynamic raw) {
    return raw as String;
  }

  Events _wire2api_events(dynamic raw) {
    return Events.values[raw];
  }

  int _wire2api_i32(dynamic raw) {
    return raw as int;
  }

  TUpdate _wire2api_t_update(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 2)
      throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return TUpdate(
      event: _wire2api_events(arr[0]),
      value: _wire2api_String(arr[1]),
    );
  }

  int _wire2api_u8(dynamic raw) {
    return raw as int;
  }

  Uint8List _wire2api_uint_8_list(dynamic raw) {
    return raw as Uint8List;
  }
}

// Section: api2wire

@protected
int api2wire_u8(int raw) {
  return raw;
}

// Section: finalizer
